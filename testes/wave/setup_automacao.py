"""
Script de configura√ß√£o para automa√ß√£o Wavecode
Instala depend√™ncias e configura o ambiente
"""

import subprocess
import sys
import os

def install_requirements():
    """Instala as depend√™ncias necess√°rias"""
    print("Instalando depend√™ncias...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ Depend√™ncias instaladas com sucesso!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao instalar depend√™ncias: {e}")
        return False

def install_chromedriver():
    """Instala o ChromeDriver automaticamente"""
    print("Configurando ChromeDriver...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "webdriver-manager"])
        
        # Criar script para configurar ChromeDriver
        setup_code = '''
from webdriver_manager.chrome import ChromeDriverManager
from selenium import webdriver
from selenium.webdriver.chrome.service import Service

# Baixar e configurar ChromeDriver
driver_path = ChromeDriverManager().install()
print(f"ChromeDriver instalado em: {driver_path}")
'''
        
        exec(setup_code)
        print("‚úÖ ChromeDriver configurado com sucesso!")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao configurar ChromeDriver: {e}")
        print("Voc√™ pode baixar manualmente em: https://chromedriver.chromium.org/")
        return False

def create_directory():
    """Cria o diret√≥rio de download se n√£o existir"""
    download_dir = r"C:\Users\pietr\OneDrive\√Årea de Trabalho\ARTE\TESTE"
    try:
        os.makedirs(download_dir, exist_ok=True)
        print(f"‚úÖ Diret√≥rio criado/verificado: {download_dir}")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao criar diret√≥rio: {e}")
        return False

def main():
    """Fun√ß√£o principal de configura√ß√£o"""
    print("=== Configura√ß√£o da Automa√ß√£o Wavecode ===")
    print()
    
    success = True
    
    # Instalar depend√™ncias
    if not install_requirements():
        success = False
    
    # Configurar ChromeDriver
    if not install_chromedriver():
        success = False
    
    # Criar diret√≥rio
    if not create_directory():
        success = False
    
    print("\n" + "="*50)
    if success:
        print("‚úÖ Configura√ß√£o conclu√≠da com sucesso!")
        print("\nPara executar a automa√ß√£o, use:")
        print("python automacao_wavecode.py")
    else:
        print("‚ùå Configura√ß√£o falhou. Verifique os erros acima.")
    
    print("\nüìù Notas importantes:")
    print("1. Certifique-se de que o Google Chrome est√° instalado")
    print("2. Verifique se as credenciais no c√≥digo est√£o corretas")
    print("3. O diret√≥rio de download ser√° criado automaticamente")

if __name__ == "__main__":
    main()
